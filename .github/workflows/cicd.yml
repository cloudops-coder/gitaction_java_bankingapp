# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: bankingappwithmaven

on:
  push:
    branches: [ "main" , "feature" ]

jobs:
  compile:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn compile
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
  security-checks:
    runs-on: self-hosted
    needs: compile
    steps:
    - uses: actions/checkout@v4
    - name: Trivy tool install
      run: |
           sudo apt-get install wget apt-transport-https gnupg lsb-release
           wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
           echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
           sudo apt-get update
           sudo apt-get install trivy
    - name: Trivy files scan
      run: trivy fs --format table -o trivy-report.json .
    - name: gitleaks installation
      run: sudo apt install gitleaks -y 
    - name: gitleaks scan code
      run: gitleaks detect source . -r gitleaksreport.json -f json
      
  test:
    runs-on: self-hosted
    needs: security-checks
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: unittestcase
      run: mvn test

  sonarscan-mvnpackage:
    runs-on: self-hosted
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: maven package  
      run: mvn package
    # - name: Checking out
    #  # uses: actions/checkout@v4
    #   with:
    #     # Disabling shallow clone is recommended for improving relevancy of reporting
    #     fetch-depth: 0
    - name: Run SonarQube Scan
      env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
           mvn sonar:sonar \
            -Dsonar.projectKey=my_project_key \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_TOKEN}
  
    
      

     
    
